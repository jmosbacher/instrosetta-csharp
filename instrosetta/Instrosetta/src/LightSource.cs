// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: instrosetta/interfaces/light/light_source.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Instrosetta.Interfaces.Light.LightSource.V1 {

  /// <summary>Holder for reflection information generated from instrosetta/interfaces/light/light_source.proto</summary>
  public static partial class LightSourceReflection {

    #region Descriptor
    /// <summary>File descriptor for instrosetta/interfaces/light/light_source.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LightSourceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci9pbnN0cm9zZXR0YS9pbnRlcmZhY2VzL2xpZ2h0L2xpZ2h0X3NvdXJjZS5w",
            "cm90bxIsaW5zdHJvc2V0dGEuaW50ZXJmYWNlcy5saWdodC5saWdodF9zb3Vy",
            "Y2UudjEaI2luc3Ryb3NldHRhL2NvbW1vbi9jb25uZWN0aW9uLnByb3RvIi4K",
            "D0dldFBvd2VyUmVxdWVzdBIMCgRuYW1lGAEgASgJEg0KBXVuaXRzGAIgASgJ",
            "IkIKEEdldFBvd2VyUmVzcG9uc2USDAoEbmFtZRgBIAEoCRIRCgltYWduaXR1",
            "ZGUYAiABKAESDQoFdW5pdHMYAyABKAkiQQoPU2V0UG93ZXJSZXF1ZXN0EgwK",
            "BG5hbWUYASABKAkSEQoJbWFnbml0dWRlGAIgASgBEg0KBXVuaXRzGAMgASgJ",
            "IkIKEFNldFBvd2VyUmVzcG9uc2USDAoEbmFtZRgBIAEoCRIRCgltYWduaXR1",
            "ZGUYAiABKAESDQoFdW5pdHMYAyABKAkykgMKC0xpZ2h0U291cmNlEi4KB0Nv",
            "bm5lY3QSDy5Db25uZWN0UmVxdWVzdBoQLkNvbm5lY3RSZXNwb25zZSIAEjcK",
            "CkRpc2Nvbm5lY3QSEi5EaXNjb25uZWN0UmVxdWVzdBoTLkRpc2Nvbm5lY3RS",
            "ZXNwb25zZSIAEosBCghHZXRQb3dlchI9Lmluc3Ryb3NldHRhLmludGVyZmFj",
            "ZXMubGlnaHQubGlnaHRfc291cmNlLnYxLkdldFBvd2VyUmVxdWVzdBo+Lmlu",
            "c3Ryb3NldHRhLmludGVyZmFjZXMubGlnaHQubGlnaHRfc291cmNlLnYxLkdl",
            "dFBvd2VyUmVzcG9uc2UiABKLAQoIU2V0UG93ZXISPS5pbnN0cm9zZXR0YS5p",
            "bnRlcmZhY2VzLmxpZ2h0LmxpZ2h0X3NvdXJjZS52MS5TZXRQb3dlclJlcXVl",
            "c3QaPi5pbnN0cm9zZXR0YS5pbnRlcmZhY2VzLmxpZ2h0LmxpZ2h0X3NvdXJj",
            "ZS52MS5TZXRQb3dlclJlc3BvbnNlIgBiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::ConnectionReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Instrosetta.Interfaces.Light.LightSource.V1.GetPowerRequest), global::Instrosetta.Interfaces.Light.LightSource.V1.GetPowerRequest.Parser, new[]{ "Name", "Units" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Instrosetta.Interfaces.Light.LightSource.V1.GetPowerResponse), global::Instrosetta.Interfaces.Light.LightSource.V1.GetPowerResponse.Parser, new[]{ "Name", "Magnitude", "Units" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Instrosetta.Interfaces.Light.LightSource.V1.SetPowerRequest), global::Instrosetta.Interfaces.Light.LightSource.V1.SetPowerRequest.Parser, new[]{ "Name", "Magnitude", "Units" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Instrosetta.Interfaces.Light.LightSource.V1.SetPowerResponse), global::Instrosetta.Interfaces.Light.LightSource.V1.SetPowerResponse.Parser, new[]{ "Name", "Magnitude", "Units" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GetPowerRequest : pb::IMessage<GetPowerRequest> {
    private static readonly pb::MessageParser<GetPowerRequest> _parser = new pb::MessageParser<GetPowerRequest>(() => new GetPowerRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetPowerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Instrosetta.Interfaces.Light.LightSource.V1.LightSourceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPowerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPowerRequest(GetPowerRequest other) : this() {
      name_ = other.name_;
      units_ = other.units_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPowerRequest Clone() {
      return new GetPowerRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "units" field.</summary>
    public const int UnitsFieldNumber = 2;
    private string units_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Units {
      get { return units_; }
      set {
        units_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetPowerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetPowerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Units != other.Units) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Units.Length != 0) hash ^= Units.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Units.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Units);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Units.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Units);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetPowerRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Units.Length != 0) {
        Units = other.Units;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Units = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetPowerResponse : pb::IMessage<GetPowerResponse> {
    private static readonly pb::MessageParser<GetPowerResponse> _parser = new pb::MessageParser<GetPowerResponse>(() => new GetPowerResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetPowerResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Instrosetta.Interfaces.Light.LightSource.V1.LightSourceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPowerResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPowerResponse(GetPowerResponse other) : this() {
      name_ = other.name_;
      magnitude_ = other.magnitude_;
      units_ = other.units_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPowerResponse Clone() {
      return new GetPowerResponse(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "magnitude" field.</summary>
    public const int MagnitudeFieldNumber = 2;
    private double magnitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Magnitude {
      get { return magnitude_; }
      set {
        magnitude_ = value;
      }
    }

    /// <summary>Field number for the "units" field.</summary>
    public const int UnitsFieldNumber = 3;
    private string units_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Units {
      get { return units_; }
      set {
        units_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetPowerResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetPowerResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Magnitude, other.Magnitude)) return false;
      if (Units != other.Units) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Magnitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Magnitude);
      if (Units.Length != 0) hash ^= Units.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Magnitude != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Magnitude);
      }
      if (Units.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Units);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Magnitude != 0D) {
        size += 1 + 8;
      }
      if (Units.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Units);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetPowerResponse other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Magnitude != 0D) {
        Magnitude = other.Magnitude;
      }
      if (other.Units.Length != 0) {
        Units = other.Units;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 17: {
            Magnitude = input.ReadDouble();
            break;
          }
          case 26: {
            Units = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetPowerRequest : pb::IMessage<SetPowerRequest> {
    private static readonly pb::MessageParser<SetPowerRequest> _parser = new pb::MessageParser<SetPowerRequest>(() => new SetPowerRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetPowerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Instrosetta.Interfaces.Light.LightSource.V1.LightSourceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetPowerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetPowerRequest(SetPowerRequest other) : this() {
      name_ = other.name_;
      magnitude_ = other.magnitude_;
      units_ = other.units_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetPowerRequest Clone() {
      return new SetPowerRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "magnitude" field.</summary>
    public const int MagnitudeFieldNumber = 2;
    private double magnitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Magnitude {
      get { return magnitude_; }
      set {
        magnitude_ = value;
      }
    }

    /// <summary>Field number for the "units" field.</summary>
    public const int UnitsFieldNumber = 3;
    private string units_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Units {
      get { return units_; }
      set {
        units_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetPowerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetPowerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Magnitude, other.Magnitude)) return false;
      if (Units != other.Units) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Magnitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Magnitude);
      if (Units.Length != 0) hash ^= Units.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Magnitude != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Magnitude);
      }
      if (Units.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Units);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Magnitude != 0D) {
        size += 1 + 8;
      }
      if (Units.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Units);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetPowerRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Magnitude != 0D) {
        Magnitude = other.Magnitude;
      }
      if (other.Units.Length != 0) {
        Units = other.Units;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 17: {
            Magnitude = input.ReadDouble();
            break;
          }
          case 26: {
            Units = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetPowerResponse : pb::IMessage<SetPowerResponse> {
    private static readonly pb::MessageParser<SetPowerResponse> _parser = new pb::MessageParser<SetPowerResponse>(() => new SetPowerResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetPowerResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Instrosetta.Interfaces.Light.LightSource.V1.LightSourceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetPowerResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetPowerResponse(SetPowerResponse other) : this() {
      name_ = other.name_;
      magnitude_ = other.magnitude_;
      units_ = other.units_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetPowerResponse Clone() {
      return new SetPowerResponse(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "magnitude" field.</summary>
    public const int MagnitudeFieldNumber = 2;
    private double magnitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Magnitude {
      get { return magnitude_; }
      set {
        magnitude_ = value;
      }
    }

    /// <summary>Field number for the "units" field.</summary>
    public const int UnitsFieldNumber = 3;
    private string units_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Units {
      get { return units_; }
      set {
        units_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetPowerResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetPowerResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Magnitude, other.Magnitude)) return false;
      if (Units != other.Units) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Magnitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Magnitude);
      if (Units.Length != 0) hash ^= Units.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Magnitude != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Magnitude);
      }
      if (Units.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Units);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Magnitude != 0D) {
        size += 1 + 8;
      }
      if (Units.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Units);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetPowerResponse other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Magnitude != 0D) {
        Magnitude = other.Magnitude;
      }
      if (other.Units.Length != 0) {
        Units = other.Units;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 17: {
            Magnitude = input.ReadDouble();
            break;
          }
          case 26: {
            Units = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
